// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Judge.proto

#include "Judge.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace judge {

inline constexpr JudgeTestPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : input_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expected_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        testpointid_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JudgeTestPoint::JudgeTestPoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JudgeTestPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JudgeTestPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JudgeTestPointDefaultTypeInternal() {}
  union {
    JudgeTestPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JudgeTestPointDefaultTypeInternal _JudgeTestPoint_default_instance_;

inline constexpr JudgeResourceUsage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : time_{::int64_t{0}},
        memory_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JudgeResourceUsage::JudgeResourceUsage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JudgeResourceUsageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JudgeResourceUsageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JudgeResourceUsageDefaultTypeInternal() {}
  union {
    JudgeResourceUsage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JudgeResourceUsageDefaultTypeInternal _JudgeResourceUsage_default_instance_;

inline constexpr JudgeDifference::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : actual_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expected_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pos_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JudgeDifference::JudgeDifference(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JudgeDifferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JudgeDifferenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JudgeDifferenceDefaultTypeInternal() {}
  union {
    JudgeDifference _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JudgeDifferenceDefaultTypeInternal _JudgeDifference_default_instance_;

inline constexpr JudgeCompilerInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        command_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timeout_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JudgeCompilerInfo::JudgeCompilerInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JudgeCompilerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JudgeCompilerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JudgeCompilerInfoDefaultTypeInternal() {}
  union {
    JudgeCompilerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JudgeCompilerInfoDefaultTypeInternal _JudgeCompilerInfo_default_instance_;

inline constexpr JudgeTestPointResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        output_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        usage_{nullptr},
        diff_{nullptr},
        testpointid_{::int64_t{0}},
        status_{static_cast< ::judge::JudgeStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR JudgeTestPointResult::JudgeTestPointResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JudgeTestPointResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JudgeTestPointResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JudgeTestPointResultDefaultTypeInternal() {}
  union {
    JudgeTestPointResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JudgeTestPointResultDefaultTypeInternal _JudgeTestPointResult_default_instance_;

inline constexpr JudgeTask::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        testpoints_{},
        sourceuri_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        compiler_{nullptr},
        limit_{nullptr},
        commitid_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR JudgeTask::JudgeTask(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JudgeTaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JudgeTaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JudgeTaskDefaultTypeInternal() {}
  union {
    JudgeTask _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JudgeTaskDefaultTypeInternal _JudgeTask_default_instance_;

inline constexpr JudgeResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : testpointresults_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        commitid_{::int64_t{0}},
        status_{static_cast< ::judge::JudgeStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JudgeResult::JudgeResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JudgeResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JudgeResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JudgeResultDefaultTypeInternal() {}
  union {
    JudgeResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JudgeResultDefaultTypeInternal _JudgeResult_default_instance_;
}  // namespace judge
static ::_pb::Metadata file_level_metadata_Judge_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_Judge_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Judge_2eproto = nullptr;
const ::uint32_t TableStruct_Judge_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::judge::JudgeCompilerInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::judge::JudgeCompilerInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeCompilerInfo, _impl_.command_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeCompilerInfo, _impl_.timeout_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::judge::JudgeResourceUsage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::judge::JudgeResourceUsage, _impl_.time_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeResourceUsage, _impl_.memory_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPoint, _impl_.input_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPoint, _impl_.expected_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPoint, _impl_.testpointid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::judge::JudgeDifference, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::judge::JudgeDifference, _impl_.pos_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeDifference, _impl_.actual_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeDifference, _impl_.expected_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPointResult, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPointResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPointResult, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPointResult, _impl_.output_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPointResult, _impl_.usage_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPointResult, _impl_.diff_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTestPointResult, _impl_.testpointid_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTask, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTask, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTask, _impl_.commitid_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTask, _impl_.sourceuri_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTask, _impl_.compiler_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTask, _impl_.limit_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeTask, _impl_.testpoints_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::judge::JudgeResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::judge::JudgeResult, _impl_.commitid_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeResult, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeResult, _impl_.testpointresults_),
    PROTOBUF_FIELD_OFFSET(::judge::JudgeResult, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::judge::JudgeCompilerInfo)},
        {11, -1, -1, sizeof(::judge::JudgeResourceUsage)},
        {21, -1, -1, sizeof(::judge::JudgeTestPoint)},
        {32, -1, -1, sizeof(::judge::JudgeDifference)},
        {43, 56, -1, sizeof(::judge::JudgeTestPointResult)},
        {61, 74, -1, sizeof(::judge::JudgeTask)},
        {79, -1, -1, sizeof(::judge::JudgeResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::judge::_JudgeCompilerInfo_default_instance_._instance,
    &::judge::_JudgeResourceUsage_default_instance_._instance,
    &::judge::_JudgeTestPoint_default_instance_._instance,
    &::judge::_JudgeDifference_default_instance_._instance,
    &::judge::_JudgeTestPointResult_default_instance_._instance,
    &::judge::_JudgeTask_default_instance_._instance,
    &::judge::_JudgeResult_default_instance_._instance,
};
const char descriptor_table_protodef_Judge_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\013Judge.proto\022\005judge\"C\n\021JudgeCompilerInf"
    "o\022\014\n\004name\030\001 \001(\t\022\017\n\007command\030\002 \001(\t\022\017\n\007time"
    "out\030\003 \001(\003\"2\n\022JudgeResourceUsage\022\014\n\004time\030"
    "\001 \001(\003\022\016\n\006memory\030\002 \001(\003\"F\n\016JudgeTestPoint\022"
    "\r\n\005input\030\001 \001(\t\022\020\n\010expected\030\002 \001(\t\022\023\n\013test"
    "PointId\030\003 \001(\003\"@\n\017JudgeDifference\022\013\n\003pos\030"
    "\001 \001(\003\022\016\n\006actual\030\002 \001(\t\022\020\n\010expected\030\003 \001(\t\""
    "\257\001\n\024JudgeTestPointResult\022\"\n\006status\030\001 \001(\016"
    "2\022.judge.JudgeStatus\022\016\n\006output\030\002 \001(\t\022(\n\005"
    "usage\030\003 \001(\0132\031.judge.JudgeResourceUsage\022$"
    "\n\004diff\030\004 \001(\0132\026.judge.JudgeDifference\022\023\n\013"
    "testPointId\030\005 \001(\003\"\261\001\n\tJudgeTask\022\020\n\010commi"
    "tId\030\001 \001(\003\022\021\n\tsourceUri\030\002 \001(\t\022*\n\010compiler"
    "\030\003 \001(\0132\030.judge.JudgeCompilerInfo\022(\n\005limi"
    "t\030\004 \001(\0132\031.judge.JudgeResourceUsage\022)\n\nte"
    "stPoints\030\005 \003(\0132\025.judge.JudgeTestPoint\"\213\001"
    "\n\013JudgeResult\022\020\n\010commitId\030\001 \001(\003\022\"\n\006statu"
    "s\030\002 \001(\0162\022.judge.JudgeStatus\0225\n\020testPoint"
    "Results\030\003 \003(\0132\033.judge.JudgeTestPointResu"
    "lt\022\017\n\007message\030\004 \001(\t*\302\001\n\013JudgeStatus\022\013\n\007P"
    "ENDING\020\000\022\013\n\007RUNNING\020\001\022\014\n\010ACCEPTED\020\002\022\020\n\014W"
    "RONG_ANSWER\020\003\022\021\n\rCOMPILE_ERROR\020\004\022\027\n\023TIME"
    "_LIMIT_EXCEEDED\020\005\022\021\n\rRUNTIME_ERROR\020\006\022\031\n\025"
    "MEMORY_LIMIT_EXCEEDED\020\007\022\013\n\007SKIPPED\020\010\022\022\n\016"
    "INTERNAL_ERROR\020c2{\n\014JudgeService\022-\n\005Judg"
    "e\022\020.judge.JudgeTask\032\022.judge.JudgeResult\022"
    "<\n\020ProcessJudgeTask\022\020.judge.JudgeTask\032\022."
    "judge.JudgeResult(\0010\001B\022\252\002\017GrpcJudgeClien"
    "tb\006proto3"
};
static ::absl::once_flag descriptor_table_Judge_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Judge_2eproto = {
    false,
    false,
    1129,
    descriptor_table_protodef_Judge_2eproto,
    "Judge.proto",
    &descriptor_table_Judge_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_Judge_2eproto::offsets,
    file_level_metadata_Judge_2eproto,
    file_level_enum_descriptors_Judge_2eproto,
    file_level_service_descriptors_Judge_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Judge_2eproto_getter() {
  return &descriptor_table_Judge_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Judge_2eproto(&descriptor_table_Judge_2eproto);
namespace judge {
const ::google::protobuf::EnumDescriptor* JudgeStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Judge_2eproto);
  return file_level_enum_descriptors_Judge_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t JudgeStatus_internal_data_[] = {
    589824u, 65536u, 99u, };
bool JudgeStatus_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, JudgeStatus_internal_data_);
}
// ===================================================================

class JudgeCompilerInfo::_Internal {
 public:
};

JudgeCompilerInfo::JudgeCompilerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:judge.JudgeCompilerInfo)
}
inline PROTOBUF_NDEBUG_INLINE JudgeCompilerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        command_(arena, from.command_),
        _cached_size_{0} {}

JudgeCompilerInfo::JudgeCompilerInfo(
    ::google::protobuf::Arena* arena,
    const JudgeCompilerInfo& from)
    : ::google::protobuf::Message(arena) {
  JudgeCompilerInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.timeout_ = from._impl_.timeout_;

  // @@protoc_insertion_point(copy_constructor:judge.JudgeCompilerInfo)
}
inline PROTOBUF_NDEBUG_INLINE JudgeCompilerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        command_(arena),
        _cached_size_{0} {}

inline void JudgeCompilerInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timeout_ = {};
}
JudgeCompilerInfo::~JudgeCompilerInfo() {
  // @@protoc_insertion_point(destructor:judge.JudgeCompilerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JudgeCompilerInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.command_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JudgeCompilerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:judge.JudgeCompilerInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.command_.ClearToEmpty();
  _impl_.timeout_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JudgeCompilerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2> JudgeCompilerInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_JudgeCompilerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeCompilerInfo, _impl_.name_)}},
    // string command = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeCompilerInfo, _impl_.command_)}},
    // int64 timeout = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JudgeCompilerInfo, _impl_.timeout_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeCompilerInfo, _impl_.timeout_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(JudgeCompilerInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string command = 2;
    {PROTOBUF_FIELD_OFFSET(JudgeCompilerInfo, _impl_.command_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timeout = 3;
    {PROTOBUF_FIELD_OFFSET(JudgeCompilerInfo, _impl_.timeout_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\27\4\7\0\0\0\0\0"
    "judge.JudgeCompilerInfo"
    "name"
    "command"
  }},
};

::uint8_t* JudgeCompilerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:judge.JudgeCompilerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "judge.JudgeCompilerInfo.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string command = 2;
  if (!this->_internal_command().empty()) {
    const std::string& _s = this->_internal_command();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "judge.JudgeCompilerInfo.command");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 timeout = 3;
  if (this->_internal_timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_timeout(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:judge.JudgeCompilerInfo)
  return target;
}

::size_t JudgeCompilerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:judge.JudgeCompilerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string command = 2;
  if (!this->_internal_command().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_command());
  }

  // int64 timeout = 3;
  if (this->_internal_timeout() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timeout());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JudgeCompilerInfo::_class_data_ = {
    JudgeCompilerInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JudgeCompilerInfo::GetClassData() const {
  return &_class_data_;
}

void JudgeCompilerInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JudgeCompilerInfo*>(&to_msg);
  auto& from = static_cast<const JudgeCompilerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:judge.JudgeCompilerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_command().empty()) {
    _this->_internal_set_command(from._internal_command());
  }
  if (from._internal_timeout() != 0) {
    _this->_internal_set_timeout(from._internal_timeout());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JudgeCompilerInfo::CopyFrom(const JudgeCompilerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:judge.JudgeCompilerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JudgeCompilerInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JudgeCompilerInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JudgeCompilerInfo::InternalSwap(JudgeCompilerInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.command_, &other->_impl_.command_, arena);
        swap(_impl_.timeout_, other->_impl_.timeout_);
}

::google::protobuf::Metadata JudgeCompilerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Judge_2eproto_getter, &descriptor_table_Judge_2eproto_once,
      file_level_metadata_Judge_2eproto[0]);
}
// ===================================================================

class JudgeResourceUsage::_Internal {
 public:
};

JudgeResourceUsage::JudgeResourceUsage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:judge.JudgeResourceUsage)
}
JudgeResourceUsage::JudgeResourceUsage(
    ::google::protobuf::Arena* arena, const JudgeResourceUsage& from)
    : JudgeResourceUsage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE JudgeResourceUsage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void JudgeResourceUsage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, memory_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::memory_));
}
JudgeResourceUsage::~JudgeResourceUsage() {
  // @@protoc_insertion_point(destructor:judge.JudgeResourceUsage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JudgeResourceUsage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JudgeResourceUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:judge.JudgeResourceUsage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.memory_) -
      reinterpret_cast<char*>(&_impl_.time_)) + sizeof(_impl_.memory_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JudgeResourceUsage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> JudgeResourceUsage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_JudgeResourceUsage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 memory = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JudgeResourceUsage, _impl_.memory_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeResourceUsage, _impl_.memory_)}},
    // int64 time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JudgeResourceUsage, _impl_.time_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeResourceUsage, _impl_.time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 time = 1;
    {PROTOBUF_FIELD_OFFSET(JudgeResourceUsage, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 memory = 2;
    {PROTOBUF_FIELD_OFFSET(JudgeResourceUsage, _impl_.memory_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* JudgeResourceUsage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:judge.JudgeResourceUsage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 time = 1;
  if (this->_internal_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_time(), target);
  }

  // int64 memory = 2;
  if (this->_internal_memory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_memory(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:judge.JudgeResourceUsage)
  return target;
}

::size_t JudgeResourceUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:judge.JudgeResourceUsage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 time = 1;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_time());
  }

  // int64 memory = 2;
  if (this->_internal_memory() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_memory());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JudgeResourceUsage::_class_data_ = {
    JudgeResourceUsage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JudgeResourceUsage::GetClassData() const {
  return &_class_data_;
}

void JudgeResourceUsage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JudgeResourceUsage*>(&to_msg);
  auto& from = static_cast<const JudgeResourceUsage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:judge.JudgeResourceUsage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_time() != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  if (from._internal_memory() != 0) {
    _this->_internal_set_memory(from._internal_memory());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JudgeResourceUsage::CopyFrom(const JudgeResourceUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:judge.JudgeResourceUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JudgeResourceUsage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JudgeResourceUsage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JudgeResourceUsage::InternalSwap(JudgeResourceUsage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JudgeResourceUsage, _impl_.memory_)
      + sizeof(JudgeResourceUsage::_impl_.memory_)
      - PROTOBUF_FIELD_OFFSET(JudgeResourceUsage, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata JudgeResourceUsage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Judge_2eproto_getter, &descriptor_table_Judge_2eproto_once,
      file_level_metadata_Judge_2eproto[1]);
}
// ===================================================================

class JudgeTestPoint::_Internal {
 public:
};

JudgeTestPoint::JudgeTestPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:judge.JudgeTestPoint)
}
inline PROTOBUF_NDEBUG_INLINE JudgeTestPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : input_(arena, from.input_),
        expected_(arena, from.expected_),
        _cached_size_{0} {}

JudgeTestPoint::JudgeTestPoint(
    ::google::protobuf::Arena* arena,
    const JudgeTestPoint& from)
    : ::google::protobuf::Message(arena) {
  JudgeTestPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.testpointid_ = from._impl_.testpointid_;

  // @@protoc_insertion_point(copy_constructor:judge.JudgeTestPoint)
}
inline PROTOBUF_NDEBUG_INLINE JudgeTestPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : input_(arena),
        expected_(arena),
        _cached_size_{0} {}

inline void JudgeTestPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.testpointid_ = {};
}
JudgeTestPoint::~JudgeTestPoint() {
  // @@protoc_insertion_point(destructor:judge.JudgeTestPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JudgeTestPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.input_.Destroy();
  _impl_.expected_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JudgeTestPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:judge.JudgeTestPoint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_.ClearToEmpty();
  _impl_.expected_.ClearToEmpty();
  _impl_.testpointid_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JudgeTestPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 42, 2> JudgeTestPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_JudgeTestPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string input = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeTestPoint, _impl_.input_)}},
    // string expected = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeTestPoint, _impl_.expected_)}},
    // int64 testPointId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JudgeTestPoint, _impl_.testpointid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeTestPoint, _impl_.testpointid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string input = 1;
    {PROTOBUF_FIELD_OFFSET(JudgeTestPoint, _impl_.input_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string expected = 2;
    {PROTOBUF_FIELD_OFFSET(JudgeTestPoint, _impl_.expected_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 testPointId = 3;
    {PROTOBUF_FIELD_OFFSET(JudgeTestPoint, _impl_.testpointid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\24\5\10\0\0\0\0\0"
    "judge.JudgeTestPoint"
    "input"
    "expected"
  }},
};

::uint8_t* JudgeTestPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:judge.JudgeTestPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string input = 1;
  if (!this->_internal_input().empty()) {
    const std::string& _s = this->_internal_input();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "judge.JudgeTestPoint.input");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string expected = 2;
  if (!this->_internal_expected().empty()) {
    const std::string& _s = this->_internal_expected();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "judge.JudgeTestPoint.expected");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 testPointId = 3;
  if (this->_internal_testpointid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_testpointid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:judge.JudgeTestPoint)
  return target;
}

::size_t JudgeTestPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:judge.JudgeTestPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string input = 1;
  if (!this->_internal_input().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_input());
  }

  // string expected = 2;
  if (!this->_internal_expected().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_expected());
  }

  // int64 testPointId = 3;
  if (this->_internal_testpointid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_testpointid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JudgeTestPoint::_class_data_ = {
    JudgeTestPoint::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JudgeTestPoint::GetClassData() const {
  return &_class_data_;
}

void JudgeTestPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JudgeTestPoint*>(&to_msg);
  auto& from = static_cast<const JudgeTestPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:judge.JudgeTestPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_input().empty()) {
    _this->_internal_set_input(from._internal_input());
  }
  if (!from._internal_expected().empty()) {
    _this->_internal_set_expected(from._internal_expected());
  }
  if (from._internal_testpointid() != 0) {
    _this->_internal_set_testpointid(from._internal_testpointid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JudgeTestPoint::CopyFrom(const JudgeTestPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:judge.JudgeTestPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JudgeTestPoint::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JudgeTestPoint::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JudgeTestPoint::InternalSwap(JudgeTestPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.input_, &other->_impl_.input_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expected_, &other->_impl_.expected_, arena);
        swap(_impl_.testpointid_, other->_impl_.testpointid_);
}

::google::protobuf::Metadata JudgeTestPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Judge_2eproto_getter, &descriptor_table_Judge_2eproto_once,
      file_level_metadata_Judge_2eproto[2]);
}
// ===================================================================

class JudgeDifference::_Internal {
 public:
};

JudgeDifference::JudgeDifference(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:judge.JudgeDifference)
}
inline PROTOBUF_NDEBUG_INLINE JudgeDifference::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : actual_(arena, from.actual_),
        expected_(arena, from.expected_),
        _cached_size_{0} {}

JudgeDifference::JudgeDifference(
    ::google::protobuf::Arena* arena,
    const JudgeDifference& from)
    : ::google::protobuf::Message(arena) {
  JudgeDifference* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.pos_ = from._impl_.pos_;

  // @@protoc_insertion_point(copy_constructor:judge.JudgeDifference)
}
inline PROTOBUF_NDEBUG_INLINE JudgeDifference::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : actual_(arena),
        expected_(arena),
        _cached_size_{0} {}

inline void JudgeDifference::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pos_ = {};
}
JudgeDifference::~JudgeDifference() {
  // @@protoc_insertion_point(destructor:judge.JudgeDifference)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JudgeDifference::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.actual_.Destroy();
  _impl_.expected_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JudgeDifference::Clear() {
// @@protoc_insertion_point(message_clear_start:judge.JudgeDifference)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.actual_.ClearToEmpty();
  _impl_.expected_.ClearToEmpty();
  _impl_.pos_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JudgeDifference::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 44, 2> JudgeDifference::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_JudgeDifference_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 pos = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JudgeDifference, _impl_.pos_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeDifference, _impl_.pos_)}},
    // string actual = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeDifference, _impl_.actual_)}},
    // string expected = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeDifference, _impl_.expected_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 pos = 1;
    {PROTOBUF_FIELD_OFFSET(JudgeDifference, _impl_.pos_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string actual = 2;
    {PROTOBUF_FIELD_OFFSET(JudgeDifference, _impl_.actual_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string expected = 3;
    {PROTOBUF_FIELD_OFFSET(JudgeDifference, _impl_.expected_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\0\6\10\0\0\0\0"
    "judge.JudgeDifference"
    "actual"
    "expected"
  }},
};

::uint8_t* JudgeDifference::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:judge.JudgeDifference)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 pos = 1;
  if (this->_internal_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_pos(), target);
  }

  // string actual = 2;
  if (!this->_internal_actual().empty()) {
    const std::string& _s = this->_internal_actual();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "judge.JudgeDifference.actual");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string expected = 3;
  if (!this->_internal_expected().empty()) {
    const std::string& _s = this->_internal_expected();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "judge.JudgeDifference.expected");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:judge.JudgeDifference)
  return target;
}

::size_t JudgeDifference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:judge.JudgeDifference)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string actual = 2;
  if (!this->_internal_actual().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_actual());
  }

  // string expected = 3;
  if (!this->_internal_expected().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_expected());
  }

  // int64 pos = 1;
  if (this->_internal_pos() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_pos());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JudgeDifference::_class_data_ = {
    JudgeDifference::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JudgeDifference::GetClassData() const {
  return &_class_data_;
}

void JudgeDifference::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JudgeDifference*>(&to_msg);
  auto& from = static_cast<const JudgeDifference&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:judge.JudgeDifference)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_actual().empty()) {
    _this->_internal_set_actual(from._internal_actual());
  }
  if (!from._internal_expected().empty()) {
    _this->_internal_set_expected(from._internal_expected());
  }
  if (from._internal_pos() != 0) {
    _this->_internal_set_pos(from._internal_pos());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JudgeDifference::CopyFrom(const JudgeDifference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:judge.JudgeDifference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JudgeDifference::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JudgeDifference::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JudgeDifference::InternalSwap(JudgeDifference* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.actual_, &other->_impl_.actual_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expected_, &other->_impl_.expected_, arena);
        swap(_impl_.pos_, other->_impl_.pos_);
}

::google::protobuf::Metadata JudgeDifference::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Judge_2eproto_getter, &descriptor_table_Judge_2eproto_once,
      file_level_metadata_Judge_2eproto[3]);
}
// ===================================================================

class JudgeTestPointResult::_Internal {
 public:
  using HasBits = decltype(std::declval<JudgeTestPointResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_._has_bits_);
  static const ::judge::JudgeResourceUsage& usage(const JudgeTestPointResult* msg);
  static void set_has_usage(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::judge::JudgeDifference& diff(const JudgeTestPointResult* msg);
  static void set_has_diff(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::judge::JudgeResourceUsage& JudgeTestPointResult::_Internal::usage(const JudgeTestPointResult* msg) {
  return *msg->_impl_.usage_;
}
const ::judge::JudgeDifference& JudgeTestPointResult::_Internal::diff(const JudgeTestPointResult* msg) {
  return *msg->_impl_.diff_;
}
JudgeTestPointResult::JudgeTestPointResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:judge.JudgeTestPointResult)
}
inline PROTOBUF_NDEBUG_INLINE JudgeTestPointResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        output_(arena, from.output_) {}

JudgeTestPointResult::JudgeTestPointResult(
    ::google::protobuf::Arena* arena,
    const JudgeTestPointResult& from)
    : ::google::protobuf::Message(arena) {
  JudgeTestPointResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.usage_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::judge::JudgeResourceUsage>(arena, *from._impl_.usage_)
                : nullptr;
  _impl_.diff_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::judge::JudgeDifference>(arena, *from._impl_.diff_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, testpointid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, testpointid_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, testpointid_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:judge.JudgeTestPointResult)
}
inline PROTOBUF_NDEBUG_INLINE JudgeTestPointResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        output_(arena) {}

inline void JudgeTestPointResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, usage_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, usage_) +
               sizeof(Impl_::status_));
}
JudgeTestPointResult::~JudgeTestPointResult() {
  // @@protoc_insertion_point(destructor:judge.JudgeTestPointResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JudgeTestPointResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.output_.Destroy();
  delete _impl_.usage_;
  delete _impl_.diff_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JudgeTestPointResult::Clear() {
// @@protoc_insertion_point(message_clear_start:judge.JudgeTestPointResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.output_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.usage_ != nullptr);
      _impl_.usage_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.diff_ != nullptr);
      _impl_.diff_->Clear();
    }
  }
  ::memset(&_impl_.testpointid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.testpointid_)) + sizeof(_impl_.status_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JudgeTestPointResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 41, 2> JudgeTestPointResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_JudgeTestPointResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .judge.JudgeStatus status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JudgeTestPointResult, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.status_)}},
    // string output = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.output_)}},
    // .judge.JudgeResourceUsage usage = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.usage_)}},
    // .judge.JudgeDifference diff = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.diff_)}},
    // int64 testPointId = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JudgeTestPointResult, _impl_.testpointid_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.testpointid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .judge.JudgeStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string output = 2;
    {PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.output_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .judge.JudgeResourceUsage usage = 3;
    {PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.usage_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .judge.JudgeDifference diff = 4;
    {PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.diff_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 testPointId = 5;
    {PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.testpointid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::judge::JudgeResourceUsage>()},
    {::_pbi::TcParser::GetTable<::judge::JudgeDifference>()},
  }}, {{
    "\32\0\6\0\0\0\0\0"
    "judge.JudgeTestPointResult"
    "output"
  }},
};

::uint8_t* JudgeTestPointResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:judge.JudgeTestPointResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .judge.JudgeStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  // string output = 2;
  if (!this->_internal_output().empty()) {
    const std::string& _s = this->_internal_output();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "judge.JudgeTestPointResult.output");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .judge.JudgeResourceUsage usage = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::usage(this),
        _Internal::usage(this).GetCachedSize(), target, stream);
  }

  // .judge.JudgeDifference diff = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::diff(this),
        _Internal::diff(this).GetCachedSize(), target, stream);
  }

  // int64 testPointId = 5;
  if (this->_internal_testpointid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_testpointid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:judge.JudgeTestPointResult)
  return target;
}

::size_t JudgeTestPointResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:judge.JudgeTestPointResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string output = 2;
  if (!this->_internal_output().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_output());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .judge.JudgeResourceUsage usage = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.usage_);
    }

    // .judge.JudgeDifference diff = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.diff_);
    }

  }
  // int64 testPointId = 5;
  if (this->_internal_testpointid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_testpointid());
  }

  // .judge.JudgeStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JudgeTestPointResult::_class_data_ = {
    JudgeTestPointResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JudgeTestPointResult::GetClassData() const {
  return &_class_data_;
}

void JudgeTestPointResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JudgeTestPointResult*>(&to_msg);
  auto& from = static_cast<const JudgeTestPointResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:judge.JudgeTestPointResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_output().empty()) {
    _this->_internal_set_output(from._internal_output());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_usage()->::judge::JudgeResourceUsage::MergeFrom(
          from._internal_usage());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_diff()->::judge::JudgeDifference::MergeFrom(
          from._internal_diff());
    }
  }
  if (from._internal_testpointid() != 0) {
    _this->_internal_set_testpointid(from._internal_testpointid());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JudgeTestPointResult::CopyFrom(const JudgeTestPointResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:judge.JudgeTestPointResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JudgeTestPointResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JudgeTestPointResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JudgeTestPointResult::InternalSwap(JudgeTestPointResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.output_, &other->_impl_.output_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.status_)
      + sizeof(JudgeTestPointResult::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(JudgeTestPointResult, _impl_.usage_)>(
          reinterpret_cast<char*>(&_impl_.usage_),
          reinterpret_cast<char*>(&other->_impl_.usage_));
}

::google::protobuf::Metadata JudgeTestPointResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Judge_2eproto_getter, &descriptor_table_Judge_2eproto_once,
      file_level_metadata_Judge_2eproto[4]);
}
// ===================================================================

class JudgeTask::_Internal {
 public:
  using HasBits = decltype(std::declval<JudgeTask>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_._has_bits_);
  static const ::judge::JudgeCompilerInfo& compiler(const JudgeTask* msg);
  static void set_has_compiler(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::judge::JudgeResourceUsage& limit(const JudgeTask* msg);
  static void set_has_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::judge::JudgeCompilerInfo& JudgeTask::_Internal::compiler(const JudgeTask* msg) {
  return *msg->_impl_.compiler_;
}
const ::judge::JudgeResourceUsage& JudgeTask::_Internal::limit(const JudgeTask* msg) {
  return *msg->_impl_.limit_;
}
JudgeTask::JudgeTask(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:judge.JudgeTask)
}
inline PROTOBUF_NDEBUG_INLINE JudgeTask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        testpoints_{visibility, arena, from.testpoints_},
        sourceuri_(arena, from.sourceuri_) {}

JudgeTask::JudgeTask(
    ::google::protobuf::Arena* arena,
    const JudgeTask& from)
    : ::google::protobuf::Message(arena) {
  JudgeTask* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.compiler_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::judge::JudgeCompilerInfo>(arena, *from._impl_.compiler_)
                : nullptr;
  _impl_.limit_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::judge::JudgeResourceUsage>(arena, *from._impl_.limit_)
                : nullptr;
  _impl_.commitid_ = from._impl_.commitid_;

  // @@protoc_insertion_point(copy_constructor:judge.JudgeTask)
}
inline PROTOBUF_NDEBUG_INLINE JudgeTask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        testpoints_{visibility, arena},
        sourceuri_(arena) {}

inline void JudgeTask::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, compiler_),
           0,
           offsetof(Impl_, commitid_) -
               offsetof(Impl_, compiler_) +
               sizeof(Impl_::commitid_));
}
JudgeTask::~JudgeTask() {
  // @@protoc_insertion_point(destructor:judge.JudgeTask)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JudgeTask::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sourceuri_.Destroy();
  delete _impl_.compiler_;
  delete _impl_.limit_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JudgeTask::Clear() {
// @@protoc_insertion_point(message_clear_start:judge.JudgeTask)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.testpoints_.Clear();
  _impl_.sourceuri_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.compiler_ != nullptr);
      _impl_.compiler_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.limit_ != nullptr);
      _impl_.limit_->Clear();
    }
  }
  _impl_.commitid_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JudgeTask::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 33, 2> JudgeTask::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_JudgeTask_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 commitId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JudgeTask, _impl_.commitid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.commitid_)}},
    // string sourceUri = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.sourceuri_)}},
    // .judge.JudgeCompilerInfo compiler = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.compiler_)}},
    // .judge.JudgeResourceUsage limit = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.limit_)}},
    // repeated .judge.JudgeTestPoint testPoints = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.testpoints_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 commitId = 1;
    {PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.commitid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string sourceUri = 2;
    {PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.sourceuri_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .judge.JudgeCompilerInfo compiler = 3;
    {PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.compiler_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .judge.JudgeResourceUsage limit = 4;
    {PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.limit_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .judge.JudgeTestPoint testPoints = 5;
    {PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.testpoints_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::judge::JudgeCompilerInfo>()},
    {::_pbi::TcParser::GetTable<::judge::JudgeResourceUsage>()},
    {::_pbi::TcParser::GetTable<::judge::JudgeTestPoint>()},
  }}, {{
    "\17\0\11\0\0\0\0\0"
    "judge.JudgeTask"
    "sourceUri"
  }},
};

::uint8_t* JudgeTask::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:judge.JudgeTask)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 commitId = 1;
  if (this->_internal_commitid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_commitid(), target);
  }

  // string sourceUri = 2;
  if (!this->_internal_sourceuri().empty()) {
    const std::string& _s = this->_internal_sourceuri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "judge.JudgeTask.sourceUri");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .judge.JudgeCompilerInfo compiler = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::compiler(this),
        _Internal::compiler(this).GetCachedSize(), target, stream);
  }

  // .judge.JudgeResourceUsage limit = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::limit(this),
        _Internal::limit(this).GetCachedSize(), target, stream);
  }

  // repeated .judge.JudgeTestPoint testPoints = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_testpoints_size()); i < n; i++) {
    const auto& repfield = this->_internal_testpoints().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:judge.JudgeTask)
  return target;
}

::size_t JudgeTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:judge.JudgeTask)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .judge.JudgeTestPoint testPoints = 5;
  total_size += 1UL * this->_internal_testpoints_size();
  for (const auto& msg : this->_internal_testpoints()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string sourceUri = 2;
  if (!this->_internal_sourceuri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sourceuri());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .judge.JudgeCompilerInfo compiler = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.compiler_);
    }

    // .judge.JudgeResourceUsage limit = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.limit_);
    }

  }
  // int64 commitId = 1;
  if (this->_internal_commitid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_commitid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JudgeTask::_class_data_ = {
    JudgeTask::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JudgeTask::GetClassData() const {
  return &_class_data_;
}

void JudgeTask::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JudgeTask*>(&to_msg);
  auto& from = static_cast<const JudgeTask&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:judge.JudgeTask)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_testpoints()->MergeFrom(
      from._internal_testpoints());
  if (!from._internal_sourceuri().empty()) {
    _this->_internal_set_sourceuri(from._internal_sourceuri());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_compiler()->::judge::JudgeCompilerInfo::MergeFrom(
          from._internal_compiler());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_limit()->::judge::JudgeResourceUsage::MergeFrom(
          from._internal_limit());
    }
  }
  if (from._internal_commitid() != 0) {
    _this->_internal_set_commitid(from._internal_commitid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JudgeTask::CopyFrom(const JudgeTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:judge.JudgeTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JudgeTask::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JudgeTask::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JudgeTask::InternalSwap(JudgeTask* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.testpoints_.InternalSwap(&other->_impl_.testpoints_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sourceuri_, &other->_impl_.sourceuri_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.commitid_)
      + sizeof(JudgeTask::_impl_.commitid_)
      - PROTOBUF_FIELD_OFFSET(JudgeTask, _impl_.compiler_)>(
          reinterpret_cast<char*>(&_impl_.compiler_),
          reinterpret_cast<char*>(&other->_impl_.compiler_));
}

::google::protobuf::Metadata JudgeTask::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Judge_2eproto_getter, &descriptor_table_Judge_2eproto_once,
      file_level_metadata_Judge_2eproto[5]);
}
// ===================================================================

class JudgeResult::_Internal {
 public:
};

JudgeResult::JudgeResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:judge.JudgeResult)
}
inline PROTOBUF_NDEBUG_INLINE JudgeResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : testpointresults_{visibility, arena, from.testpointresults_},
        message_(arena, from.message_),
        _cached_size_{0} {}

JudgeResult::JudgeResult(
    ::google::protobuf::Arena* arena,
    const JudgeResult& from)
    : ::google::protobuf::Message(arena) {
  JudgeResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, commitid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, commitid_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, commitid_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:judge.JudgeResult)
}
inline PROTOBUF_NDEBUG_INLINE JudgeResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : testpointresults_{visibility, arena},
        message_(arena),
        _cached_size_{0} {}

inline void JudgeResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, commitid_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, commitid_) +
               sizeof(Impl_::status_));
}
JudgeResult::~JudgeResult() {
  // @@protoc_insertion_point(destructor:judge.JudgeResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JudgeResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JudgeResult::Clear() {
// @@protoc_insertion_point(message_clear_start:judge.JudgeResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.testpointresults_.Clear();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.commitid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.commitid_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JudgeResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 33, 2> JudgeResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_JudgeResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeResult, _impl_.message_)}},
    // int64 commitId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JudgeResult, _impl_.commitid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeResult, _impl_.commitid_)}},
    // .judge.JudgeStatus status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JudgeResult, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeResult, _impl_.status_)}},
    // repeated .judge.JudgeTestPointResult testPointResults = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(JudgeResult, _impl_.testpointresults_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 commitId = 1;
    {PROTOBUF_FIELD_OFFSET(JudgeResult, _impl_.commitid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .judge.JudgeStatus status = 2;
    {PROTOBUF_FIELD_OFFSET(JudgeResult, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .judge.JudgeTestPointResult testPointResults = 3;
    {PROTOBUF_FIELD_OFFSET(JudgeResult, _impl_.testpointresults_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string message = 4;
    {PROTOBUF_FIELD_OFFSET(JudgeResult, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::judge::JudgeTestPointResult>()},
  }}, {{
    "\21\0\0\0\7\0\0\0"
    "judge.JudgeResult"
    "message"
  }},
};

::uint8_t* JudgeResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:judge.JudgeResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 commitId = 1;
  if (this->_internal_commitid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_commitid(), target);
  }

  // .judge.JudgeStatus status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_status(), target);
  }

  // repeated .judge.JudgeTestPointResult testPointResults = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_testpointresults_size()); i < n; i++) {
    const auto& repfield = this->_internal_testpointresults().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string message = 4;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "judge.JudgeResult.message");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:judge.JudgeResult)
  return target;
}

::size_t JudgeResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:judge.JudgeResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .judge.JudgeTestPointResult testPointResults = 3;
  total_size += 1UL * this->_internal_testpointresults_size();
  for (const auto& msg : this->_internal_testpointresults()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string message = 4;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // int64 commitId = 1;
  if (this->_internal_commitid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_commitid());
  }

  // .judge.JudgeStatus status = 2;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JudgeResult::_class_data_ = {
    JudgeResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JudgeResult::GetClassData() const {
  return &_class_data_;
}

void JudgeResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JudgeResult*>(&to_msg);
  auto& from = static_cast<const JudgeResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:judge.JudgeResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_testpointresults()->MergeFrom(
      from._internal_testpointresults());
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_commitid() != 0) {
    _this->_internal_set_commitid(from._internal_commitid());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JudgeResult::CopyFrom(const JudgeResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:judge.JudgeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JudgeResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JudgeResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JudgeResult::InternalSwap(JudgeResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.testpointresults_.InternalSwap(&other->_impl_.testpointresults_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JudgeResult, _impl_.status_)
      + sizeof(JudgeResult::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(JudgeResult, _impl_.commitid_)>(
          reinterpret_cast<char*>(&_impl_.commitid_),
          reinterpret_cast<char*>(&other->_impl_.commitid_));
}

::google::protobuf::Metadata JudgeResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Judge_2eproto_getter, &descriptor_table_Judge_2eproto_once,
      file_level_metadata_Judge_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace judge
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
